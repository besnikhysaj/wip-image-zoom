{"version":3,"sources":["scripts/app.js"],"names":["wipImageZoomConfig","this","defaults","zoomEnable","defaultIndex","images","style","boxPos","boxW","boxH","method","cursor","lens","zoomLevel","immersiveMode","immersiveModeOptions","immersiveModeMessage","prevThumbButton","nextThumbButton","thumbsPos","thumbCol","thumbColPadding","setDefaults","angular","extend","$get","wipImageZoomDirective","$timeout","restrict","template","replace","scope","selectedModel","selectedIndex","wipImageZoom","immersive","controllerAs","link","element","attrs","ctrl","el","init","controller","$scope","$document","$window","$compile","vm","options","defaultOpts","setImages","mainImage","registerWatchers","length","thumb","src","medium","large","update","updateTimeout","cancel","initThumbs","initZoom","updateThumbsPos","initSizes","zoomTracker","zoomLens","display","removeEventListeners","immersiveModeActive","innerWidth","addEventListener","enableImmersiveMode","addEventListeners","zoomStateEnable","zoomStateDisable","setZoomImagePosition","removeEventListener","disableImmersiveMode","find","removeClass","immersedEl","remove","ev","preventDefault","stopPropagation","$apply","addClass","body","eq","immersedImageOpt","copy","append","thumbsWrapperWidth","thumbsWrapper","clientWidth","thumbWidth","Math","round","thumbsWidth","maxPosX","$evalAsync","thumbsEl","paddingBottom","paddingTop","i","children","width","paddingRight","nextThumb","scrollThumbs","prevThumb","newPosX","scrollX","transform","tracker","getBoundingClientRect","trackerW","trackerH","height","trackerL","left","trackerT","top","scrollY","maskW","maskH","zoomMaskEl","zoomImageEl","offsetWidth","offsetHeight","zoomImgW","zoomImgH","setLensSize","e","te","type","touches","evPosX","pageX","evPosY","pageY","setLensPosition","trackLens","trackPointer","posX","lensW","zoomLevelRatio","lensPosX","posY","lensH","lensPosY","getSelectedIndex","isInView","zoomActive","watchSelectedModel","newVal","oldVal","isDefined","watchSelectedIndex","updateMainImage","image","largeImageLoading","deRegisterWatchers","indexOf","unWatchSelectedIndex","$watch","unWatchSelectedModel","largeImageLoaded","prevThumbActive","nextThumbActive","window","on","Ps","document","wipImageZoomLensDirective","require","wipImageZoomTrackerDirective","wipImageZoomMaskDirective","wipImageZoomImageDirective","wipImageZoomThumbsDirective","getElementsByClassName","imageOnLoadDirective","$log","imageOnLoad","warn","$inject","module","provider","directive","MainController","zoomOptions1","defaultImage","runBlock","run","config","wipImageZoomConfigProvider","$templateCache","put"],"mappings":"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","file":"scripts/app.js","sourcesContent":["(function ()\n{\n    'use strict';\n\n    angular\n        .module('wipImageZoom', ['ngSanitize', 'ngTouch'])\n        .provider('wipImageZoomConfig', wipImageZoomConfig)\n        .directive('imageOnLoad', imageOnLoadDirective)\n        .directive('wipImageZoom', wipImageZoomDirective)\n        .directive('wipImageZoomTracker', wipImageZoomTrackerDirective)\n        .directive('wipImageZoomLens', wipImageZoomLensDirective)\n        .directive('wipImageZoomMask', wipImageZoomMaskDirective)\n        .directive('wipImageZoomImage', wipImageZoomImageDirective)\n        .directive('wipImageZoomThumbs', wipImageZoomThumbsDirective);\n\n\n    function wipImageZoomConfig()\n    {\n        this.defaults = {\n            zoomEnable          : true,\n            defaultIndex        : 0, // Order of the default selected Image\n            /* You should give images in array with object properties\n             [{\n             thumb : 'assets/images/1-thumb.jpg',\n             medium: 'assets/images/1-medium.jpg',\n             large : 'assets/images/1-large.jpg'\n             }] */\n            images              : [],\n            style               : 'inner', // inner or box\n            boxPos              : 'right-top', // e.g., right-top, right-middle, right-bottom, top-center, top-left, top-right ...\n            boxW                : 400, // Box width\n            boxH                : 400, // Box height\n            method              : 'lens', // fallow 'lens' or 'pointer'\n            cursor              : 'crosshair', // 'none', 'default', 'crosshair', 'pointer', 'move'\n            lens                : true, // Lens toggle\n            zoomLevel           : 3, // 0: not scales, uses the original large image size, use 1 and above to adjust.\n            immersiveMode       : '769', // false or 0 for disable, always, max width(px) for trigger\n            immersiveModeOptions: {}, // can extend immersed mode options\n            immersiveModeMessage: 'Click to Zoom', // Immersive mode message\n            prevThumbButton     : '&#9665;', // Prev thumb button (html)\n            nextThumbButton     : '&#9655;', // Next thumb button (html)\n            thumbsPos           : 'bottom', // Thumbs position: 'top', 'bottom'\n            thumbCol            : 3, // Thumb column count\n            thumbColPadding     : 4 // Padding between thumbs\n        };\n\n        this.setDefaults = function (defaults)\n        {\n            this.defaults = angular.extend(this.defaults, defaults);\n        };\n\n        this.$get = function ()\n        {\n            return this;\n        };\n\n    }\n\n    function wipImageZoomDirective($timeout)\n    {\n        return {\n            restrict    : 'EA',\n            template    : '<div class=\"wip-image-zoom {{vm.options.style}}-style {{vm.options.thumbsPos}}-thumbs\"\\n     ng-class=\"{\\n     \\'active\\':vm.zoomActive, \\n     \\'immersive-mode\\':vm.immersiveModeActive && !immersive,\\n     \\'zoom-disabled\\':!vm.options.zoomEnable,\\n     \\'box-style\\':vm.options.style == \\'box\\' ,\\n     \\'inner-style\\':vm.options.style == \\'inner\\'}\">\\n\\n    <wip-image-zoom-thumbs ng-if=\"vm.options.thumbsPos === \\'top\\' && vm.images.length > 1\"></wip-image-zoom-thumbs>\\n\\n    <div ng-hide=\"!vm.options.zoomEnable && immersive\" class=\"main-image-wrapper\" ng-class=\"{\\'loading\\':vm.largeImageLoading}\">\\n        <div class=\"image-zoom-tracker\" wip-image-zoom-tracker></div>\\n        <div class=\"image-zoom-lens\" wip-image-zoom-lens></div>\\n        <img class=\"main-image\" ng-src=\"{{vm.mainImage.medium}}\" image-on-load=\"vm.initZoom()\">\\n        <div class=\"zoom-mask\"\\n             ng-class=\"vm.options.style == \\'box\\'? vm.options.boxPos : \\'\\'\"\\n             wip-image-zoom-mask>\\n            <img wip-image-zoom-image class=\"zoom-image main-image-large\" image-on-load=\"vm.largeImageLoaded()\"\\n                 ng-src=\"{{vm.mainImage.large}}\">\\n        </div>\\n        <div ng-if=\"vm.immersiveModeActive && !immersive && vm.options.immersiveModeMessage !== \\'\\'\"\\n             class=\"immersive-mode-message\" ng-bind=\"vm.options.immersiveModeMessage\"></div>\\n    </div>\\n\\n    <div class=\"immersive-no-zoom-image-wrapper\" ng-show=\"!vm.options.zoomEnable && immersive\">\\n        <img class=\"main-image-large\" ng-src=\"{{vm.mainImage.large}}\">\\n    </div>\\n\\n    <wip-image-zoom-thumbs\\n            ng-if=\"vm.options.thumbsPos === \\'bottom\\' && vm.images.length > 1\"></wip-image-zoom-thumbs>\\n</div>',\n            replace     : true,\n            scope       : {\n                selectedModel: '=?',\n                selectedIndex: '=?',\n                wipImageZoom : '=',\n                immersive    : '=?'\n            },\n            controllerAs: 'vm',\n            link        : function (scope, element, attrs, ctrl)\n            {\n                ctrl.el = element;\n                ctrl.attrs = attrs;\n                ctrl.init();\n            },\n            controller  : function ($scope, $document, $window, $compile, wipImageZoomConfig)\n            {\n                var vm = this,\n                    evPosX, evPosY, trackerW, trackerH, trackerL, trackerT, maskW, maskH, zoomImgW, zoomImgH, lensW,\n                    lensH, lensPosX, lensPosY, zoomLevelRatio,\n                    defaultOpts = angular.copy(wipImageZoomConfig.defaults),\n                    updateTimeout = true, unWatchSelectedIndex, unWatchSelectedModel;\n\n                vm.el = {};\n                vm.zoomTracker = {};\n                vm.zoomLens = {};\n                vm.zoomImageEl = {};\n                vm.thumbsWrapper = {};\n                vm.thumbsEl = {};\n                vm.mainImage = {};\n                vm.options = {};\n                vm.images = [];\n                vm.zoomActive = false;\n                vm.largeImageLoading = true;\n\n                vm.prevThumbActive = false;\n                vm.nextThumbActive = false;\n                vm.thumbWidth = 0;\n                vm.thumbsWrapperWidth = 0;\n                vm.thumbsWidth = 0;\n                vm.thumbsPos = 0;\n                vm.immersiveModeActive = false;\n\n                vm.init = init;\n                vm.initZoom = initZoom;\n                vm.initThumbs = initThumbs;\n                vm.largeImageLoaded = largeImageLoaded;\n\n                vm.updateMainImage = updateMainImage;\n                vm.nextThumb = nextThumb;\n                vm.prevThumb = prevThumb;\n                vm.disableImmersiveMode = disableImmersiveMode;\n\n                function init()\n                {\n                    vm.options = !$scope.wipImageZoom ? defaultOpts : angular.extend(defaultOpts, $scope.wipImageZoom);\n\n                    setImages();\n\n                    $scope.selectedIndex = vm.options.defaultIndex;\n                    $scope.selectedModel = vm.mainImage;\n\n                    registerWatchers();\n                }\n\n                function setImages()\n                {\n                    if ( vm.options.images.length <= 0 )\n                    {\n                        vm.options.images = [\n                            {\n                                thumb : vm.attrs.src,\n                                medium: vm.attrs.src,\n                                large : vm.attrs.src\n                            }\n                        ];\n                    }\n\n                    vm.images = vm.options.images;\n                    vm.mainImage = vm.images[vm.options.defaultIndex];\n                }\n\n                function update()\n                {\n                    // Debounce for update\n                    if ( updateTimeout )\n                    {\n                        $timeout.cancel(updateTimeout);\n                    }\n\n                    updateTimeout = $timeout(function ()\n                    {\n                        initThumbs();\n                        initZoom();\n                        updateThumbsPos();\n                    }, 400);\n                }\n\n                function initZoom()\n                {\n                    if ( !vm.options.zoomEnable )\n                    {\n                        return;\n                    }\n\n                    initSizes();\n\n                    vm.zoomTracker.style.cursor = vm.options.cursor;\n\n                    if ( vm.options.lens )\n                    {\n                        vm.zoomLens.style.display = 'block';\n                    }\n                    else\n                    {\n                        vm.zoomLens.style.display = 'none';\n                    }\n\n                    // Reset Event Listeners\n                    removeEventListeners();\n\n                    vm.immersiveModeActive = vm.options.immersiveMode && vm.options.immersiveMode > $window.innerWidth || vm.options.immersiveMode === 'always';\n\n                    if ( vm.immersiveModeActive && !$scope.immersive )\n                    {\n                        vm.zoomTracker.addEventListener('mousedown', enableImmersiveMode);\n                    }\n\n                    if ( !vm.immersiveModeActive || $scope.immersive )\n                    {\n                        addEventListeners();\n                    }\n\n                }\n\n                function addEventListeners()\n                {\n                    vm.zoomTracker.addEventListener('mousemove', zoomStateEnable);\n                    vm.zoomTracker.addEventListener('touchstart', zoomStateEnable);\n\n                    vm.zoomTracker.addEventListener('mouseleave', zoomStateDisable);\n                    vm.zoomTracker.addEventListener('touchend', zoomStateDisable);\n\n                    vm.zoomTracker.addEventListener('mousemove', setZoomImagePosition);\n                    vm.zoomTracker.addEventListener('touchmove', setZoomImagePosition);\n                }\n\n                function removeEventListeners()\n                {\n                    vm.zoomTracker.removeEventListener('mousedown', enableImmersiveMode);\n\n                    vm.zoomTracker.removeEventListener('mousemove', zoomStateEnable);\n                    vm.zoomTracker.removeEventListener('touchstart', zoomStateEnable);\n\n                    vm.zoomTracker.removeEventListener('mouseleave', zoomStateDisable);\n                    vm.zoomTracker.removeEventListener('touchend', zoomStateDisable);\n\n                    vm.zoomTracker.removeEventListener('mousemove', setZoomImagePosition);\n                    vm.zoomTracker.removeEventListener('touchmove', setZoomImagePosition);\n                }\n\n                function disableImmersiveMode()\n                {\n                    $document.find('html').removeClass('wip-image-zoom-immersive-mode-enabled');\n                    removeEventListeners();\n                    vm.immersedEl.remove();\n                    update();\n                }\n\n                function enableImmersiveMode(ev)\n                {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    $scope.$apply(function ()\n                    {\n                        $document.find('html').addClass('wip-image-zoom-immersive-mode-enabled');\n                        var body = $document.find('body').eq(0);\n                        vm.immersedImageOpt = angular.extend(angular.copy(vm.options), vm.options.immersiveModeOptions);\n                        vm.immersedImageOpt.defaultIndex = $scope.selectedIndex;\n                        vm.immersedImageOpt.style = 'inner';\n                        vm.immersedEl = $compile('<div class=\"immersive-wip-image-zoom\">\\n    <div class=\"disable-immersive-mode-button\" ng-click=\"vm.disableImmersiveMode()\">&#10006;</div>\\n    <img src=\"\" wip-image-zoom=\"vm.immersedImageOpt\" immersive=\"true\" selected-index=\"selectedIndex\">\\n</div>\\n')($scope);\n                        body.append(vm.immersedEl);\n                        update();\n                    });\n                }\n\n                function initThumbs()\n                {\n                    if ( vm.images.length <= 1 )\n                    {\n                        return;\n                    }\n                    vm.thumbsWrapperWidth = vm.thumbsWrapper.clientWidth;\n                    vm.thumbWidth = Math.round((vm.thumbsWrapperWidth + vm.options.thumbColPadding) / vm.options.thumbCol);\n                    vm.thumbsWidth = vm.thumbWidth * vm.images.length;\n                    vm.maxPosX = vm.images.length - vm.options.thumbCol;\n\n                    // Set Thumbnail width\n                    $scope.$evalAsync(function ()\n                    {\n                        if ( vm.options.thumbsPos === 'top' )\n                        {\n                            vm.thumbsEl.style.paddingBottom = vm.options.thumbColPadding + 'px';\n                            vm.thumbsEl.style.paddingTop = 0;\n                        }\n                        else\n                        {\n                            vm.thumbsEl.style.paddingTop = vm.options.thumbColPadding + 'px';\n                            vm.thumbsEl.style.paddingBottom = 0;\n                        }\n\n                        for ( var i = 0; i < vm.thumbsEl.children.length; i++ )\n                        {\n                            var thumb = vm.thumbsEl.children[i];\n                            thumb.style.width = vm.thumbWidth + 'px';\n                            thumb.style.paddingRight = vm.options.thumbColPadding + 'px';\n                        }\n                    });\n                }\n\n                function nextThumb()\n                {\n                    scrollThumbs(vm.thumbsPos + 1);\n                }\n\n                function prevThumb()\n                {\n                    scrollThumbs(vm.thumbsPos - 1);\n                }\n\n                function scrollThumbs(newPosX)\n                {\n                    newPosX = newPosX < 0 ? 0 : newPosX;\n                    newPosX = newPosX > vm.maxPosX ? vm.maxPosX : newPosX;\n                    vm.thumbsPos = newPosX;\n                    var scrollX = vm.thumbsPos * vm.thumbWidth * -1;\n                    vm.thumbsEl.style.transform = 'translate3d(' + scrollX + 'px, 0px, 0)';\n                }\n\n                function initSizes()\n                {\n                    var tracker = vm.zoomTracker.getBoundingClientRect();\n                    trackerW = tracker.width;\n                    trackerH = tracker.height;\n                    trackerL = tracker.left + $window.scrollX;\n                    trackerT = tracker.top + $window.scrollY;\n                    // Box Style\n                    if ( vm.options.style === 'box' && !$scope.immersive )\n                    {\n                        maskW = vm.options.boxW;\n                        maskH = vm.options.boxH;\n                        vm.zoomMaskEl.style.width = maskW + 'px';\n                        vm.zoomMaskEl.style.height = maskH + 'px';\n                    }\n                    // Inner Style\n                    else\n                    {\n                        maskW = trackerW;\n                        maskH = trackerH;\n                        vm.zoomMaskEl.style.width = '100%';\n                        vm.zoomMaskEl.style.height = '100%';\n                    }\n\n                    vm.zoomImageEl.style.width = '';\n                    vm.zoomImageEl.style.height = '';\n\n                    if ( vm.options.zoomLevel > 1 )\n                    {\n                        vm.zoomImageEl.style.width = trackerW * vm.options.zoomLevel + 'px';\n                        vm.zoomImageEl.style.height = trackerH * vm.options.zoomLevel + 'px';\n                    }\n                    else\n                    {\n                        if ( vm.zoomImageEl.offsetWidth <= maskW || vm.zoomImageEl.offsetHeight <= maskH )\n                        {\n                            //landscape\n                            if ( vm.zoomImageEl.offsetWidth / vm.zoomImageEl.offsetHeight > 1 )\n                            {\n                                vm.zoomImageEl.style.height = maskH * 1.5 + 'px';\n                                vm.zoomImageEl.style.width = '';\n                            }\n                            // portrait\n                            else\n                            {\n                                vm.zoomImageEl.style.width = maskW * 1.5 + 'px';\n                                vm.zoomImageEl.style.height = '';\n                            }\n                        }\n                    }\n\n                    zoomImgW = vm.zoomImageEl.offsetWidth;\n                    zoomImgH = vm.zoomImageEl.offsetHeight;\n                    setLensSize();\n\n                }\n\n                function setZoomImagePosition(e)\n                {\n                    e.preventDefault();\n                    var te = e.type === 'touchmove' && e.touches && e.touches[0];\n\n                    evPosX = te && te.pageX || e.pageX;\n                    evPosY = te && te.pageY || e.pageY;\n\n                    setLensPosition();\n\n                    if ( vm.options.method === 'lens' )\n                    {\n                        trackLens();\n                    }\n                    // pointer\n                    else\n                    {\n                        trackPointer();\n                    }\n\n                }\n\n                function trackLens()\n                {\n                    var posX = [(zoomImgW - maskW + lensW * 1 / zoomLevelRatio) * [(lensPosX / trackerW)]];\n                    var posY = [(zoomImgH - maskH + lensH * 1 / zoomLevelRatio) * [lensPosY / trackerH]];\n                    vm.zoomImageEl.style.transform = 'translate3d(' + posX * -1 + 'px,' + posY * -1 + 'px,0)';\n                }\n\n                function trackPointer()\n                {\n                    var posX = [(zoomImgW - maskW) * [(evPosX - trackerL) / trackerW]];\n                    var posY = [(zoomImgH - maskH) * [(evPosY - trackerT) / trackerH]];\n\n                    // Touch Fixes\n                    posX = evPosX < trackerL ? 0 : posX;\n                    posY = evPosY < trackerT ? 0 : posY;\n                    posX = evPosX > trackerL + trackerW ? (zoomImgW - maskW) : posX;\n                    posY = evPosY > trackerT + trackerH ? (zoomImgH - maskH) : posY;\n\n                    vm.zoomImageEl.style.transform = 'translate3d(' + posX * -1 + 'px,' + posY * -1 + 'px,0)';\n                }\n\n                function setLensSize()\n                {\n                    zoomLevelRatio = trackerW / zoomImgW;\n                    lensW = maskW * zoomLevelRatio;\n                    lensH = maskH * zoomLevelRatio;\n                    vm.zoomLens.style.width = lensW + 'px';\n                    vm.zoomLens.style.height = lensH + 'px';\n                }\n\n                function setLensPosition()\n                {\n                    lensPosX = (evPosX - trackerL) - lensW * 0.5;\n                    lensPosY = (evPosY - trackerT) - lensH * 0.5;\n\n                    lensPosX = lensPosX > (trackerW - lensW) ? trackerW - lensW : lensPosX;\n                    lensPosX = lensPosX < 0 ? 0 : lensPosX;\n\n                    lensPosY = lensPosY > (trackerH - lensH) ? trackerH - lensH : lensPosY;\n                    lensPosY = lensPosY < 0 ? 0 : lensPosY;\n\n                    vm.zoomLens.style.transform = 'translate3d(' + lensPosX + 'px,' + lensPosY + 'px,0)';\n                }\n\n                function updateThumbsPos()\n                {\n                    if ( vm.images.length <= 1 )\n                    {\n                        return;\n                    }\n                    var selectedIndex = getSelectedIndex();\n                    var isInView = vm.thumbsPos + vm.options.thumbCol > selectedIndex && vm.thumbsPos < selectedIndex;\n                    if ( isInView )\n                    {\n                        scrollThumbs(vm.thumbsPos);\n                        return;\n                    }\n                    scrollThumbs(selectedIndex);\n                }\n\n                function getSelectedIndex()\n                {\n                    for ( var i = 0; i < vm.images.length; i++ )\n                    {\n                        if ( vm.images[i].medium === vm.mainImage.medium )\n                        {\n                            return i;\n                        }\n                    }\n                }\n\n                function zoomStateEnable()\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.zoomActive = true;\n                    });\n                }\n\n                function zoomStateDisable()\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.zoomActive = false;\n                    });\n                }\n\n\n                function watchSelectedModel(newVal, oldVal)\n                {\n                    if ( angular.isDefined(newVal) && newVal !== oldVal )\n                    {\n                        vm.mainImage = newVal;\n                        updateThumbsPos();\n                    }\n                }\n\n\n                function watchSelectedIndex(newVal, oldVal)\n                {\n                    if ( angular.isDefined(newVal) && newVal !== oldVal )\n                    {\n                        vm.mainImage = vm.images[newVal];\n                        updateThumbsPos();\n                    }\n                }\n\n                function updateMainImage(image)\n                {\n\n                    vm.largeImageLoading = true;\n                    vm.mainImage = image;\n\n                    // Pause Watchers\n                    deRegisterWatchers();\n\n                    $scope.selectedModel = angular.copy(vm.mainImage);\n                    $scope.selectedIndex = vm.images.indexOf(vm.mainImage);\n\n                    // Resume watchers\n                    registerWatchers();\n                }\n\n                function registerWatchers()\n                {\n                    unWatchSelectedIndex = $scope.$watch('selectedIndex', watchSelectedIndex, true);\n                    unWatchSelectedModel = $scope.$watch('selectedModel', watchSelectedModel, true);\n                }\n\n                function deRegisterWatchers()\n                {\n                    unWatchSelectedModel();\n                    unWatchSelectedIndex();\n                }\n\n                function largeImageLoaded()\n                {\n                    vm.largeImageLoading = false;\n                    initSizes();\n                }\n\n                angular.element(window).on('resize', function ()\n                {\n                    update();\n                });\n\n                if ( $window.Ps )\n                {\n                    angular.element(document).on('ps-scroll-y', function ()\n                    {\n                        initSizes();\n                    });\n                }\n\n                $scope.$watch(function ()\n                {\n                    return {\n                        left: vm.zoomTracker.getBoundingClientRect().left + $window.scrollX,\n                        top : vm.zoomTracker.getBoundingClientRect().top + $window.scrollY\n                    };\n                }, function (newVal, oldVal)\n                {\n                    if ( angular.isDefined(newVal) && newVal !== oldVal )\n                    {\n                        update();\n                    }\n                }, true);\n\n                $scope.$watch('wipImageZoom', function (newVal, oldVal)\n                {\n                    if ( angular.isDefined(newVal) && newVal !== oldVal )\n                    {\n                        init();\n                        update();\n                    }\n                }, true);\n            }\n        };\n    }\n\n    function wipImageZoomLensDirective()\n    {\n        return {\n            restrict: 'EA',\n            require : '^wipImageZoom',\n            link    : function (scope, element, attrs, ctrl)\n            {\n                ctrl.zoomLens = element[0];\n            }\n        };\n    }\n\n    function wipImageZoomTrackerDirective()\n    {\n        return {\n            restrict: 'EA',\n            require : '^wipImageZoom',\n            link    : function (scope, element, attrs, ctrl)\n            {\n                ctrl.zoomTracker = element[0];\n            }\n        };\n    }\n\n    function wipImageZoomMaskDirective()\n    {\n        return {\n            restrict: 'EA',\n            require : '^wipImageZoom',\n            link    : function (scope, element, attrs, ctrl)\n            {\n                ctrl.zoomMaskEl = element[0];\n            }\n        };\n    }\n\n    function wipImageZoomImageDirective()\n    {\n        return {\n            restrict: 'EA',\n            require : '^wipImageZoom',\n            link    : function (scope, element, attrs, ctrl)\n            {\n                ctrl.zoomImageEl = element[0];\n            }\n        };\n    }\n\n    function wipImageZoomThumbsDirective()\n    {\n        return {\n            restrict: 'EA',\n            require : '^wipImageZoom',\n            template: '<div class=\"thumbs-wrapper\" ng-swipe-left=\"vm.nextThumb()\" ng-swipe-right=\"vm.prevThumb()\">\\n    <div class=\"thumbs\" >\\n        <div class=\"thumb-wrapper\" ng-repeat=\"image in vm.images\">\\n            <img ng-src=\"{{image.thumb}}\" ng-click=\"vm.updateMainImage(image)\"\\n                 ng-class=\"{\\'selected\\': vm.mainImage.thumb === image.thumb}\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\"prev-button\"\\n     ng-if=\"vm.thumbsPos !== 0\"\\n     ng-click=\"vm.prevThumb()\"\\n     ng-bind-html=\"vm.options.prevThumbButton\">Prev\\n</div>\\n<div class=\"next-button\"\\n     ng-if=\"vm.thumbsPos !== vm.maxPosX && vm.images.length > vm.options.thumbCol\"\\n     ng-click=\"vm.nextThumb()\"\\n     ng-bind-html=\"vm.options.nextThumbButton\">Next\\n</div>',\n            link    : function (scope, element, attrs, ctrl)\n            {\n                ctrl.thumbsWrapper = element[0].getElementsByClassName('thumbs-wrapper')[0];\n                ctrl.thumbsEl = element[0].getElementsByClassName('thumbs')[0];\n                ctrl.initThumbs();\n            }\n        };\n    }\n\n    function imageOnLoadDirective($log)\n    {\n        return {\n            restrict: 'A',\n            link    : function (scope, element, attrs)\n            {\n                element[0].addEventListener('load', function ()\n                {\n                    scope.$apply(attrs.imageOnLoad);\n                }, false);\n                element[0].addEventListener('error', function ()\n                {\n                    $log.warn('image could not be loaded');\n                });\n            }\n        };\n    }\n\n})();\n\n(function ()\r\n{\r\n    'use strict';\r\n\r\n    angular\r\n        .module('wipImageZoom')\r\n        .controller('MainController', MainController);\r\n\r\n    /** @ngInject */\r\n    function MainController()\r\n    {\r\n        var vm = this;\r\n        vm.zoomOptions1 = {\r\n            defaultImage        : 0,\r\n            style               : 'box',\r\n            boxPos              : 'right-top',\r\n            boxW                : 400,\r\n            boxH                : 400,\r\n            method              : 'lens',\r\n            cursor              : 'crosshair',\r\n            lens                : true,\r\n            zoomLevel           : 3,\r\n            immersiveMode       : '769',\r\n            immersiveModeOptions: {\r\n            },\r\n            prevThumbButton     : '&#9665;',\r\n            nextThumbButton     : '&#9655;',\r\n            thumbsPos           : 'bottom',\r\n            thumbCol            : 4,\r\n            thumbColPadding     : 4,\r\n            images              : [\r\n                {\r\n                    thumb : 'assets/images/1-thumb.jpg',\r\n                    medium: 'assets/images/1-medium.jpg',\r\n                    large : 'assets/images/1-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/2-thumb.jpg',\r\n                    medium: 'assets/images/2-medium.jpg',\r\n                    large : 'assets/images/2-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/3-thumb.jpg',\r\n                    medium: 'assets/images/3-medium.jpg',\r\n                    large : 'assets/images/3-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/4-thumb.jpg',\r\n                    medium: 'assets/images/4-medium.jpg',\r\n                    large : 'assets/images/4-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/5-thumb.jpg',\r\n                    medium: 'assets/images/5-medium.jpg',\r\n                    large : 'assets/images/5-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/6-thumb.jpg',\r\n                    medium: 'assets/images/6-medium.jpg',\r\n                    large : 'assets/images/6-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/7-thumb.jpg',\r\n                    medium: 'assets/images/7-medium.jpg',\r\n                    large : 'assets/images/7-large.jpg'\r\n                }\r\n            ]\r\n        };\r\n    }\r\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo', ['wipImageZoom']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock() {\n\n  }\n\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('wipImageZoomDemo')\n        .config(config);\n\n    /** @ngInject */\n    function config(wipImageZoomConfigProvider)\n    {\n        wipImageZoomConfigProvider.setDefaults({\n        });\n    }\n\n})();\n\nangular.module(\"wipImageZoom\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><h1 class=page-title>wip-image-zoom</h1><div class=demo-preview><img src=assets/images/1-medium.jpg wip-image-zoom=vm.zoomOptions1 selected-model=vm.selected selected-index=vm.selectedIndex><!--  <div style=\\\"width:300px\\\">\\r\\n              <img src=\\\"http://lorempixel.com/output/nature-h-c-100-200-9.jpg\\\" wip-image-zoom=\\'{\\r\\n                 \\\"images\\\"              : [\\r\\n                  {\\r\\n                      thumb : \\\"http://lorempixel.com/output/nature-h-c-100-200-9.jpg\\\",\\r\\n                      medium: \\\"http://lorempixel.com/output/nature-h-c-100-200-9.jpg\\\",\\r\\n                      large : \\\"http://lorempixel.com/output/nature-h-c-200-400-9.jpg\\\"\\r\\n                  },\\r\\n                  {\\r\\n                      thumb : \\\"http://lorempixel.com/output/nature-h-c-100-150-5.jpg\\\",\\r\\n                      medium: \\\"http://lorempixel.com/output/nature-h-c-100-150-5.jpg\\\",\\r\\n                      large : \\\"http://lorempixel.com/output/nature-h-c-600-900-5.jpg\\\"\\r\\n                  },\\r\\n                  {\\r\\n                      thumb : \\\"http://lorempixel.com/output/nature-q-c-200-100-6.jpg\\\",\\r\\n                      medium: \\\"http://lorempixel.com/output/nature-q-c-200-100-6.jpg\\\",\\r\\n                      large : \\\"http://lorempixel.com/output/nature-q-c-400-200-6.jpg\\\"\\r\\n                  },\\r\\n                  {\\r\\n                      thumb : \\\"http://lorempixel.com/output/nature-q-c-200-100-6.jpg\\\",\\r\\n                      medium: \\\"http://lorempixel.com/output/nature-q-c-400-200-6.jpg\\\",\\r\\n                      large : \\\"http://lorempixel.com/output/nature-q-c-300-200-6.jpg\\\"\\r\\n                  },\\r\\n                  {\\r\\n                      thumb : \\\"http://lorempixel.com/output/nature-q-c-200-200-3.jpg\\\",\\r\\n                      medium: \\\"http://lorempixel.com/output/nature-q-c-200-200-3.jpg\\\",\\r\\n                      large : \\\"http://lorempixel.com/output/nature-q-c-400-400-3.jpg\\\"\\r\\n                  }\\r\\n                  ]\\r\\n              }\\'>\\r\\n          </div>\\r\\n          --></div><section><div class=demo-settings><button ng-repeat=\\\"image in vm.zoomOptions1.images\\\" ng-click=\\\"vm.selected = image\\\">Image {{$index +1 }}</button><div class=setting><label>Style:</label><select ng-model=vm.zoomOptions1.style><option value=box>Box</option><option value=inner>Inner</option></select></div><div class=setting><label>Box Style Position:</label><select ng-model=vm.zoomOptions1.boxPos><option value=right-top>Right Top</option><option value=right-middle>Right Middle</option><option value=right-bottom>Right Bottom</option><option value=left-top>Left Top</option><option value=left-middle>Left Middle</option><option value=left-bottom>Left Bottom</option><option value=bottom-left>Bottom Left</option><option value=bottom-center>Bottom Center</option><option value=bottom-right>Bottom Right</option><option value=top-left>Top Left</option><option value=top-center>Top Center</option><option value=top-right>Top Right</option></select></div><div class=setting><label>Box Width:</label><input ng-model=vm.zoomOptions1.boxW type=number step=1 min=0></div><div class=setting><label>Box Height:</label><input ng-model=vm.zoomOptions1.boxH type=number step=1 min=0></div><div class=setting><label>Method:</label><select ng-model=vm.zoomOptions1.method><option value=lens>Lens</option><option value=pointer>Pointer</option></select></div><div class=setting><label>Cursor:</label><select ng-model=vm.zoomOptions1.cursor><option value=default>Default</option><option value=pointer>Pointer</option><option value=crosshair>Crosshair</option><option value=move>Move</option><option value=zoom-in>Zoom in</option><option value=none>None</option></select></div><div class=setting><label>Show Lens:</label><input ng-model=vm.zoomOptions1.lens type=checkbox></div><div class=setting><label>Zoom Level:</label><input ng-model=vm.zoomOptions1.zoomLevel type=number step=.5 min=0></div><div class=setting><label>Immersive Mode:</label><input ng-model=vm.zoomOptions1.immersiveMode><div class=detail>false or 0 for disable, max width(px) for trigger</div></div><div class=setting><label>Thumbs Position:</label><select ng-model=vm.zoomOptions1.thumbsPos><option value=top>top</option><option value=bottom>bottom</option></select></div><div class=setting><label>Previous Thumb Button:</label><input ng-model=vm.zoomOptions1.prevThumbButton type=text></div><div class=setting><label>Next Thumb Button:</label><input ng-model=vm.zoomOptions1.nextThumbButton type=text></div><div class=setting><label>Thumb Column Count:</label><input ng-model=vm.zoomOptions1.thumbCol type=number step=1 min=1></div><div class=setting><label>Thumb Column Padding (px):</label><input ng-model=vm.zoomOptions1.thumbColPadding type=number step=1 min=0></div></div><div class=demo-json><h4>Options</h4><pre>{{vm.zoomOptions1 | json}}</pre><h4>Selected Model</h4><pre>{{vm.selected | json}}</pre><h4>SelectedIndex</h4><pre>{{vm.selectedIndex}}</pre></div></section></div>\");}]);"],"sourceRoot":"/source/"}