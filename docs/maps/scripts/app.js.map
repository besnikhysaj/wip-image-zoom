{"version":3,"sources":["scripts/app.js"],"names":["wipImageZoomConfig","this","defaults","zoomEnable","defaultIndex","images","style","boxPos","boxW","boxH","method","cursor","lens","zoomLevel","immersiveMode","immersiveModeOptions","immersiveModeMessage","prevThumbButton","nextThumbButton","thumbsPos","thumbCol","thumbColPadding","setDefaults","angular","extend","$get","wipImageZoomDirective","$timeout","restrict","template","replace","scope","selectedModel","selectedIndex","wipImageZoom","immersive","controllerAs","link","element","attrs","ctrl","el","init","controller","$scope","$document","$window","$compile","vm","options","defaultOpts","setImages","mainImage","length","thumb","src","medium","large","update","updateTimeout","cancel","initThumbs","initZoom","updateThumbsPos","initSizes","zoomTracker","zoomLens","display","removeEventListeners","immersiveModeActive","innerWidth","addEventListener","enableImmersiveMode","addEventListeners","zoomStateEnable","zoomStateDisable","setZoomImagePosition","removeEventListener","disableImmersiveMode","find","removeClass","immersedEl","remove","ev","preventDefault","stopPropagation","$apply","addClass","body","eq","immersedImageOpt","copy","append","thumbsWrapperWidth","thumbsWrapper","clientWidth","thumbWidth","Math","round","thumbsWidth","maxPosX","$evalAsync","thumbsEl","paddingBottom","paddingTop","i","children","width","paddingRight","nextThumb","scrollThumbs","prevThumb","newPosX","scrollX","transform","tracker","getBoundingClientRect","trackerW","trackerH","height","trackerL","left","trackerT","top","scrollY","maskW","maskH","zoomMaskEl","zoomImageEl","zoomImgW","offsetWidth","zoomImgH","offsetHeight","setLensSize","e","te","type","touches","evPosX","pageX","evPosY","pageY","setLensPosition","trackLens","trackPointer","posX","lensW","zoomLevelRatio","lensPosX","posY","lensH","lensPosY","getSelectedIndex","isInView","zoomActive","updateMainImage","image","largeImageLoading","indexOf","largeImageLoaded","prevThumbActive","nextThumbActive","$watch","newVal","oldVal","isDefined","window","on","Ps","document","wipImageZoomLensDirective","require","wipImageZoomTrackerDirective","wipImageZoomMaskDirective","wipImageZoomImageDirective","wipImageZoomThumbsDirective","getElementsByClassName","imageOnLoadDirective","$log","imageOnLoad","warn","$inject","module","provider","directive","MainController","zoomOptions1","defaultImage","runBlock","run","config","wipImageZoomConfigProvider","$templateCache","put"],"mappings":"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","file":"scripts/app.js","sourcesContent":["angular\r\n    .module('wipImageZoom', ['ngSanitize', 'ngTouch'])\r\n    .provider('wipImageZoomConfig', wipImageZoomConfig)\r\n    .directive('imageOnLoad', imageOnLoadDirective)\r\n    .directive('wipImageZoom', wipImageZoomDirective)\r\n    .directive('wipImageZoomTracker', wipImageZoomTrackerDirective)\r\n    .directive('wipImageZoomLens', wipImageZoomLensDirective)\r\n    .directive('wipImageZoomMask', wipImageZoomMaskDirective)\r\n    .directive('wipImageZoomImage', wipImageZoomImageDirective)\r\n    .directive('wipImageZoomThumbs', wipImageZoomThumbsDirective);\r\n\r\n\r\nfunction wipImageZoomConfig()\r\n{\r\n    this.defaults = {\r\n        zoomEnable          : true,\r\n        defaultIndex        : 0, // Order of the default selected Image\r\n        images              : [],\r\n        style               : 'inner', // inner or box\r\n        boxPos              : 'right-top', // e.g., right-top, right-middle, right-bottom, top-center, top-left, top-right ...\r\n        boxW                : 400,\r\n        boxH                : 400,\r\n        method              : 'lens', // fallow 'lens' or 'pointer'\r\n        cursor              : 'crosshair', // 'none', 'default', 'crosshair', 'pointer', 'move'\r\n        lens                : true,\r\n        zoomLevel           : 3, // 0: not scales, uses the original large image size, use 1 and above to adjust.\r\n        immersiveMode       : '769', // false or 0 for disable, always, max width(px) for trigger\r\n        immersiveModeOptions: {}, // can extend immersed mode options\r\n        immersiveModeMessage: 'Click to Zoom',\r\n        prevThumbButton     : '&#9665;',\r\n        nextThumbButton     : '&#9655;',\r\n        thumbsPos           : 'bottom',\r\n        thumbCol            : 3,\r\n        thumbColPadding     : 4\r\n    };\r\n\r\n    this.setDefaults = function (defaults)\r\n    {\r\n        this.defaults = angular.extend(this.defaults, defaults);\r\n    };\r\n\r\n    this.$get = function ()\r\n    {\r\n        return this;\r\n    };\r\n\r\n}\r\nfunction wipImageZoomDirective($timeout)\r\n{\r\n    return {\r\n        restrict    : 'EA',\r\n        template    : '<div class=\"wip-image-zoom {{vm.options.style}}-style {{vm.options.thumbsPos}}-thumbs\"\\n     ng-class=\"{\\n     \\'active\\':vm.zoomActive, \\n     \\'immersive-mode\\':vm.immersiveModeActive && !immersive,\\n     \\'zoom-disabled\\':!vm.options.zoomEnable,\\n     \\'box-style\\':vm.options.style == \\'box\\' ,\\n     \\'inner-style\\':vm.options.style == \\'inner\\'}\">\\n\\n    <wip-image-zoom-thumbs ng-if=\"vm.options.thumbsPos === \\'top\\' && vm.images.length > 1\"></wip-image-zoom-thumbs>\\n\\n    <div ng-hide=\"!vm.options.zoomEnable && immersive\" class=\"main-image-wrapper\" ng-class=\"{\\'loading\\':vm.largeImageLoading}\">\\n        <div class=\"image-zoom-tracker\" wip-image-zoom-tracker></div>\\n        <div class=\"image-zoom-lens\" wip-image-zoom-lens></div>\\n        <img class=\"main-image\" ng-src=\"{{vm.mainImage.medium}}\" image-on-load=\"vm.initZoom()\">\\n        <div class=\"zoom-mask\"\\n             ng-class=\"vm.options.style == \\'box\\'? vm.options.boxPos : \\'\\'\"\\n             wip-image-zoom-mask>\\n            <img wip-image-zoom-image class=\"zoom-image main-image-large\" image-on-load=\"vm.largeImageLoaded()\"\\n                 ng-src=\"{{vm.mainImage.large}}\">\\n        </div>\\n        <div ng-if=\"vm.immersiveModeActive && !immersive && vm.options.immersiveModeMessage !== \\'\\'\"\\n             class=\"immersive-mode-message\" ng-bind=\"vm.options.immersiveModeMessage\"></div>\\n    </div>\\n\\n    <div class=\"immersive-no-zoom-image-wrapper\" ng-show=\"!vm.options.zoomEnable && immersive\">\\n        <img class=\"main-image-large\" ng-src=\"{{vm.mainImage.large}}\">\\n    </div>\\n\\n    <wip-image-zoom-thumbs\\n            ng-if=\"vm.options.thumbsPos === \\'bottom\\' && vm.images.length > 1\"></wip-image-zoom-thumbs>\\n</div>',\r\n        replace     : true,\r\n        scope       : {\r\n            selectedModel: '=?',\r\n            selectedIndex: '=?',\r\n            wipImageZoom : '=',\r\n            immersive    : '=?'\r\n        },\r\n        controllerAs: 'vm',\r\n        link        : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.el = element;\r\n            ctrl.attrs = attrs;\r\n            ctrl.init();\r\n        },\r\n        controller  : function ($scope, $document, $window, $compile, wipImageZoomConfig)\r\n        {\r\n            var vm = this,\r\n                evPosX, evPosY, trackerW, trackerH, trackerL, trackerT, maskW, maskH, zoomImgW, zoomImgH, lensW, lensH, lensPosX, lensPosY, zoomLevelRatio,\r\n                defaultOpts = angular.copy(wipImageZoomConfig.defaults),\r\n                updateTimeout = true;\r\n\r\n            vm.el;\r\n            vm.zoomTracker;\r\n            vm.zoomLens;\r\n            vm.zoomImageEl;\r\n            vm.thumbsWrapper;\r\n            vm.thumbsEl;\r\n            vm.mainImage;\r\n            vm.options;\r\n            vm.images = [];\r\n            vm.zoomActive = false;\r\n            vm.largeImageLoading = true;\r\n\r\n            vm.prevThumbActive = false;\r\n            vm.nextThumbActive = false;\r\n            vm.thumbWidth;\r\n            vm.thumbsWrapperWidth;\r\n            vm.thumbsWidth;\r\n            vm.thumbsPos = 0;\r\n            vm.immersiveModeActive;\r\n\r\n            vm.init = init;\r\n            vm.initZoom = initZoom;\r\n            vm.initThumbs = initThumbs;\r\n            vm.largeImageLoaded = largeImageLoaded;\r\n\r\n            vm.updateMainImage = updateMainImage;\r\n            vm.nextThumb = nextThumb;\r\n            vm.prevThumb = prevThumb;\r\n            vm.disableImmersiveMode = disableImmersiveMode;\r\n\r\n            function init()\r\n            {\r\n                vm.options = !$scope.wipImageZoom ? defaultOpts : angular.extend(defaultOpts, $scope.wipImageZoom);\r\n\r\n                setImages();\r\n\r\n                $scope.selectedIndex = vm.options.defaultIndex;\r\n                $scope.selectedModel = vm.mainImage;\r\n            }\r\n\r\n            function setImages()\r\n            {\r\n                if ( vm.options.images.length <= 0 )\r\n                {\r\n                    vm.options.images = [\r\n                        {\r\n                            thumb : vm.attrs.src,\r\n                            medium: vm.attrs.src,\r\n                            large : vm.attrs.src\r\n                        }\r\n                    ];\r\n                }\r\n\r\n                vm.images = vm.options.images;\r\n                vm.mainImage = vm.images[vm.options.defaultIndex];\r\n            }\r\n\r\n            function update()\r\n            {\r\n                // Debounce for update\r\n                if ( updateTimeout )\r\n                {\r\n                    $timeout.cancel(updateTimeout);\r\n                }\r\n\r\n                updateTimeout = $timeout(function ()\r\n                {\r\n                    initThumbs();\r\n                    initZoom();\r\n                    updateThumbsPos();\r\n                }, 400);\r\n            }\r\n\r\n            function initZoom()\r\n            {\r\n                if ( !vm.options.zoomEnable )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                initSizes();\r\n\r\n                vm.zoomTracker.style.cursor = vm.options.cursor;\r\n\r\n                if ( vm.options.lens )\r\n                {\r\n                    vm.zoomLens.style.display = 'block';\r\n                }\r\n                else\r\n                {\r\n                    vm.zoomLens.style.display = 'none';\r\n                }\r\n\r\n                // Reset Event Listeners\r\n                removeEventListeners();\r\n\r\n                vm.immersiveModeActive = vm.options.immersiveMode && vm.options.immersiveMode > $window.innerWidth || vm.options.immersiveMode === 'allways';\r\n\r\n                if ( vm.immersiveModeActive && !$scope.immersive )\r\n                {\r\n                    vm.zoomTracker.addEventListener('mousedown', enableImmersiveMode);\r\n                }\r\n\r\n                if ( !vm.immersiveModeActive || $scope.immersive )\r\n                {\r\n                    addEventListeners();\r\n                }\r\n\r\n            }\r\n\r\n            function addEventListeners()\r\n            {\r\n                vm.zoomTracker.addEventListener('mousemove', zoomStateEnable);\r\n                vm.zoomTracker.addEventListener('touchstart', zoomStateEnable);\r\n\r\n                vm.zoomTracker.addEventListener('mouseleave', zoomStateDisable);\r\n                vm.zoomTracker.addEventListener('touchend', zoomStateDisable);\r\n\r\n                vm.zoomTracker.addEventListener('mousemove', setZoomImagePosition);\r\n                vm.zoomTracker.addEventListener('touchmove', setZoomImagePosition);\r\n            }\r\n\r\n            function removeEventListeners()\r\n            {\r\n                vm.zoomTracker.removeEventListener('mousedown', enableImmersiveMode);\r\n\r\n                vm.zoomTracker.removeEventListener('mousemove', zoomStateEnable);\r\n                vm.zoomTracker.removeEventListener('touchstart', zoomStateEnable);\r\n\r\n                vm.zoomTracker.removeEventListener('mouseleave', zoomStateDisable);\r\n                vm.zoomTracker.removeEventListener('touchend', zoomStateDisable);\r\n\r\n                vm.zoomTracker.removeEventListener('mousemove', setZoomImagePosition);\r\n                vm.zoomTracker.removeEventListener('touchmove', setZoomImagePosition);\r\n            }\r\n\r\n            function disableImmersiveMode()\r\n            {\r\n                $document.find('html').removeClass('wip-image-zoom-immersive-mode-enabled');\r\n                removeEventListeners();\r\n                vm.immersedEl.remove();\r\n                update();\r\n            }\r\n\r\n            function enableImmersiveMode(ev)\r\n            {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                $scope.$apply(function ()\r\n                {\r\n                    $document.find('html').addClass('wip-image-zoom-immersive-mode-enabled');\r\n                    var body = $document.find('body').eq(0);\r\n                    vm.immersedImageOpt = angular.extend(angular.copy(vm.options), vm.options.immersiveModeOptions);\r\n                    vm.immersedImageOpt.defaultIndex = $scope.selectedIndex;\r\n                    vm.immersedImageOpt.style = 'inner';\r\n                    vm.immersedEl = $compile('<div class=\"immersive-wip-image-zoom\">\\n    <div class=\"disable-immersive-mode-button\" ng-click=\"vm.disableImmersiveMode()\">&#10006;</div>\\n    <img src=\"\" wip-image-zoom=\"vm.immersedImageOpt\" immersive=\"true\" selected-index=\"selectedIndex\">\\n</div>\\n')($scope);\r\n                    body.append(vm.immersedEl);\r\n                    update();\r\n                });\r\n            }\r\n\r\n            function initThumbs()\r\n            {\r\n                if ( vm.images.length <= 1 )\r\n                {\r\n                    return;\r\n                }\r\n                vm.thumbsWrapperWidth = vm.thumbsWrapper.clientWidth;\r\n                vm.thumbWidth = Math.round((vm.thumbsWrapperWidth + vm.options.thumbColPadding) / vm.options.thumbCol);\r\n                vm.thumbsWidth = vm.thumbWidth * vm.images.length;\r\n                vm.maxPosX = vm.images.length - vm.options.thumbCol;\r\n\r\n                // Set Thumbnail width\r\n                $scope.$evalAsync(function ()\r\n                {\r\n                    if ( vm.options.thumbsPos == 'top' )\r\n                    {\r\n                        vm.thumbsEl.style.paddingBottom = vm.options.thumbColPadding + 'px';\r\n                        vm.thumbsEl.style.paddingTop = 0;\r\n                    }\r\n                    else\r\n                    {\r\n                        vm.thumbsEl.style.paddingTop = vm.options.thumbColPadding + 'px';\r\n                        vm.thumbsEl.style.paddingBottom = 0;\r\n                    }\r\n\r\n                    for ( var i = 0; i < vm.thumbsEl.children.length; i++ )\r\n                    {\r\n                        var thumb = vm.thumbsEl.children[i];\r\n                        thumb.style.width = vm.thumbWidth + 'px';\r\n                        thumb.style.paddingRight = vm.options.thumbColPadding + 'px';\r\n                    }\r\n                });\r\n            }\r\n\r\n            function nextThumb()\r\n            {\r\n                scrollThumbs(vm.thumbsPos + 1);\r\n            }\r\n\r\n            function prevThumb()\r\n            {\r\n                scrollThumbs(vm.thumbsPos - 1);\r\n            }\r\n\r\n            function scrollThumbs(newPosX)\r\n            {\r\n                newPosX = newPosX < 0 ? 0 : newPosX;\r\n                newPosX = newPosX > vm.maxPosX ? vm.maxPosX : newPosX;\r\n                vm.thumbsPos = newPosX;\r\n                var scrollX = vm.thumbsPos * vm.thumbWidth * -1;\r\n                vm.thumbsEl.style.transform = 'translate3d(' + scrollX + 'px, 0px, 0)';\r\n            }\r\n\r\n            function initSizes()\r\n            {\r\n                var tracker = vm.zoomTracker.getBoundingClientRect();\r\n                trackerW = tracker.width;\r\n                trackerH = tracker.height;\r\n                trackerL = tracker.left + $window.scrollX;\r\n                trackerT = tracker.top + $window.scrollY;\r\n                // Box Style\r\n                if ( vm.options.style == 'box' && !$scope.immersive )\r\n                {\r\n                    maskW = vm.options.boxW;\r\n                    maskH = vm.options.boxH;\r\n                    vm.zoomMaskEl.style.width = maskW + 'px';\r\n                    vm.zoomMaskEl.style.height = maskH + 'px';\r\n                }\r\n                // Inner Style\r\n                else\r\n                {\r\n                    maskW = trackerW;\r\n                    maskH = trackerH;\r\n                    vm.zoomMaskEl.style.width = '100%';\r\n                    vm.zoomMaskEl.style.height = '100%';\r\n                }\r\n\r\n                if ( vm.options.zoomLevel > 1 )\r\n                {\r\n                    vm.zoomImageEl.style.width = trackerW * vm.options.zoomLevel + 'px';\r\n                    vm.zoomImageEl.style.height = trackerH * vm.options.zoomLevel + 'px';\r\n                }\r\n\r\n                zoomImgW = vm.zoomImageEl.offsetWidth;\r\n                zoomImgH = vm.zoomImageEl.offsetHeight;\r\n\r\n                setLensSize();\r\n\r\n            }\r\n\r\n            function setZoomImagePosition(e)\r\n            {\r\n                e.preventDefault();\r\n                var te = e.type == 'touchmove' && e.touches && e.touches[0];\r\n\r\n                evPosX = te && te.pageX || e.pageX;\r\n                evPosY = te && te.pageY || e.pageY;\r\n\r\n                setLensPosition();\r\n\r\n                if ( vm.options.method === 'lens' )\r\n                {\r\n                    trackLens();\r\n                }\r\n                // pointer\r\n                else\r\n                {\r\n                    trackPointer();\r\n                }\r\n\r\n            }\r\n\r\n            function trackLens()\r\n            {\r\n                var posX = [(zoomImgW - maskW + lensW * 1 / zoomLevelRatio) * [(lensPosX / trackerW)]];\r\n                var posY = [(zoomImgH - maskH + lensH * 1 / zoomLevelRatio) * [lensPosY / trackerH]];\r\n                vm.zoomImageEl.style.transform = 'translate3d(' + posX * -1 + 'px,' + posY * -1 + 'px,0)';\r\n            }\r\n\r\n            function trackPointer()\r\n            {\r\n                var posX = [(zoomImgW - maskW) * [(evPosX - trackerL) / trackerW]];\r\n                var posY = [(zoomImgH - maskH) * [(evPosY - trackerT) / trackerH]];\r\n\r\n                // Touch Fixes\r\n                posX = evPosX < trackerL ? 0 : posX;\r\n                posY = evPosY < trackerT ? 0 : posY;\r\n                posX = evPosX > trackerL + trackerW ? (zoomImgW - maskW) : posX;\r\n                posY = evPosY > trackerT + trackerH ? (zoomImgH - maskH) : posY;\r\n\r\n                vm.zoomImageEl.style.transform = 'translate3d(' + posX * -1 + 'px,' + posY * -1 + 'px,0)';\r\n            }\r\n\r\n            function setLensSize()\r\n            {\r\n                zoomLevelRatio = trackerW / zoomImgW;\r\n                lensW = maskW * zoomLevelRatio;\r\n                lensH = maskH * zoomLevelRatio;\r\n                vm.zoomLens.style.width = lensW + 'px';\r\n                vm.zoomLens.style.height = lensH + 'px';\r\n            }\r\n\r\n            function setLensPosition()\r\n            {\r\n                lensPosX = (evPosX - trackerL) - lensW * 0.5;\r\n                lensPosY = (evPosY - trackerT) - lensH * 0.5;\r\n\r\n                lensPosX = lensPosX > (trackerW - lensW) ? trackerW - lensW : lensPosX;\r\n                lensPosX = lensPosX < 0 ? 0 : lensPosX;\r\n\r\n                lensPosY = lensPosY > (trackerH - lensH) ? trackerH - lensH : lensPosY;\r\n                lensPosY = lensPosY < 0 ? 0 : lensPosY;\r\n\r\n                vm.zoomLens.style.transform = 'translate3d(' + lensPosX + 'px,' + lensPosY + 'px,0)';\r\n            }\r\n\r\n            function updateThumbsPos()\r\n            {\r\n                if ( vm.images.length <= 1 )\r\n                {\r\n                    return;\r\n                }\r\n                var selectedIndex = getSelectedIndex();\r\n                var isInView = vm.thumbsPos + vm.options.thumbCol > selectedIndex && vm.thumbsPos < selectedIndex;\r\n                if ( isInView )\r\n                {\r\n                    scrollThumbs(vm.thumbsPos);\r\n                    return;\r\n                }\r\n                scrollThumbs(selectedIndex);\r\n            }\r\n\r\n            function getSelectedIndex()\r\n            {\r\n                for ( var i = 0; i < vm.images.length; i++ )\r\n                {\r\n                    if ( vm.images[i].medium === vm.mainImage.medium )\r\n                    {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function zoomStateEnable()\r\n            {\r\n                $scope.$evalAsync(function ()\r\n                {\r\n                    vm.zoomActive = true;\r\n                })\r\n            }\r\n\r\n            function zoomStateDisable()\r\n            {\r\n                $scope.$evalAsync(function ()\r\n                {\r\n                    vm.zoomActive = false;\r\n                })\r\n            }\r\n\r\n            function updateMainImage(image)\r\n            {\r\n                vm.largeImageLoading = true;\r\n                vm.mainImage = image;\r\n                $scope.selectedModel = vm.mainImage;\r\n                $scope.selectedIndex = vm.images.indexOf(vm.mainImage);\r\n            }\r\n\r\n            function largeImageLoaded()\r\n            {\r\n                vm.largeImageLoading = false;\r\n            }\r\n\r\n            $scope.$watch('selectedModel', function (newVal, oldVal)\r\n            {\r\n                if ( angular.isDefined(newVal) && newVal !== oldVal )\r\n                {\r\n                    vm.mainImage = newVal;\r\n                    updateThumbsPos();\r\n                }\r\n            }, true);\r\n\r\n            $scope.$watch('selectedIndex', function (newVal, oldVal)\r\n            {\r\n                if ( angular.isDefined(newVal) && newVal !== oldVal )\r\n                {\r\n                    vm.mainImage = vm.images[newVal];\r\n                    updateThumbsPos();\r\n                }\r\n            }, true);\r\n\r\n            angular.element(window).on('resize', function ()\r\n            {\r\n                update();\r\n            });\r\n\r\n            if ( $window.Ps )\r\n            {\r\n                angular.element(document).on('ps-scroll-y', function ()\r\n                {\r\n                    initSizes();\r\n                });\r\n            }\r\n\r\n            $scope.$watch(function ()\r\n            {\r\n                return {\r\n                    left: vm.zoomTracker.getBoundingClientRect().left + $window.scrollX,\r\n                    top : vm.zoomTracker.getBoundingClientRect().top + $window.scrollY\r\n                };\r\n            }, function (newVal, oldVal)\r\n            {\r\n                if ( angular.isDefined(newVal) && newVal !== oldVal )\r\n                {\r\n                    update();\r\n                }\r\n            }, true);\r\n\r\n            $scope.$watch('wipImageZoom', function (newVal, oldVal)\r\n            {\r\n                if ( angular.isDefined(newVal) && newVal !== oldVal )\r\n                {\r\n                    init();\r\n                    update();\r\n                }\r\n            }, true);\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomLensDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.zoomLens = element[0];\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomTrackerDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.zoomTracker = element[0];\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomMaskDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.zoomMaskEl = element[0];\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomImageDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.zoomImageEl = element[0];\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomThumbsDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        template: '<div class=\"thumbs-wrapper\" ng-swipe-left=\"vm.nextThumb()\" ng-swipe-right=\"vm.prevThumb()\">\\n    <div class=\"thumbs\" >\\n        <div class=\"thumb-wrapper\" ng-repeat=\"image in vm.images\">\\n            <img ng-src=\"{{image.thumb}}\" ng-click=\"vm.updateMainImage(image)\"\\n                 ng-class=\"{\\'selected\\': vm.mainImage.thumb === image.thumb}\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\"prev-button\"\\n     ng-if=\"vm.thumbsPos !== 0\"\\n     ng-click=\"vm.prevThumb()\"\\n     ng-bind-html=\"vm.options.prevThumbButton\">Prev\\n</div>\\n<div class=\"next-button\"\\n     ng-if=\"vm.thumbsPos !== vm.maxPosX\"\\n     ng-click=\"vm.nextThumb()\"\\n     ng-bind-html=\"vm.options.nextThumbButton\">Next\\n</div>',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.thumbsWrapper = element[0].getElementsByClassName('thumbs-wrapper')[0];\r\n            ctrl.thumbsEl = element[0].getElementsByClassName('thumbs')[0];\r\n            ctrl.initThumbs();\r\n        }\r\n    }\r\n}\r\n\r\nfunction imageOnLoadDirective($log)\r\n{\r\n    return {\r\n        restrict: 'A',\r\n        link    : function (scope, element, attrs)\r\n        {\r\n            element[0].addEventListener('load', function ()\r\n            {\r\n                scope.$apply(attrs.imageOnLoad);\r\n            }, false);\r\n            element[0].addEventListener('error', function ()\r\n            {\r\n                $log.warn('image could not be loaded');\r\n            });\r\n        }\r\n    };\r\n}\n(function ()\r\n{\r\n    'use strict';\r\n\r\n    angular\r\n        .module('wipImageZoom')\r\n        .controller('MainController', MainController);\r\n\r\n    /** @ngInject */\r\n    function MainController()\r\n    {\r\n        var vm = this;\r\n        vm.zoomOptions1 = {\r\n            defaultImage        : 0,\r\n            style               : 'box',\r\n            boxPos              : 'right-top',\r\n            boxW                : 400,\r\n            boxH                : 400,\r\n            method              : 'lens',\r\n            cursor              : 'crosshair',\r\n            lens                : true,\r\n            zoomLevel           : 3,\r\n            immersiveMode       : '769',\r\n            immersiveModeOptions: {\r\n            },\r\n            prevThumbButton     : '&#9665;',\r\n            nextThumbButton     : '&#9655;',\r\n            thumbsPos           : 'bottom',\r\n            thumbCol            : 4,\r\n            thumbColPadding     : 4,\r\n            images              : [\r\n                {\r\n                    thumb : 'assets/images/1-thumb.jpg',\r\n                    medium: 'assets/images/1-medium.jpg',\r\n                    large : 'assets/images/1-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/2-thumb.jpg',\r\n                    medium: 'assets/images/2-medium.jpg',\r\n                    large : 'assets/images/2-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/3-thumb.jpg',\r\n                    medium: 'assets/images/3-medium.jpg',\r\n                    large : 'assets/images/3-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/4-thumb.jpg',\r\n                    medium: 'assets/images/4-medium.jpg',\r\n                    large : 'assets/images/4-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/5-thumb.jpg',\r\n                    medium: 'assets/images/5-medium.jpg',\r\n                    large : 'assets/images/5-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/6-thumb.jpg',\r\n                    medium: 'assets/images/6-medium.jpg',\r\n                    large : 'assets/images/6-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/7-thumb.jpg',\r\n                    medium: 'assets/images/7-medium.jpg',\r\n                    large : 'assets/images/7-large.jpg'\r\n                }\r\n            ]\r\n        };\r\n    }\r\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo', ['wipImageZoom']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock() {\n\n  }\n\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('wipImageZoomDemo')\n        .config(config);\n\n    /** @ngInject */\n    function config(wipImageZoomConfigProvider)\n    {\n        wipImageZoomConfigProvider.setDefaults({\n        });\n    }\n\n})();\n\nangular.module(\"wipImageZoom\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><h1 class=page-title>wip-image-zoom</h1><div class=demo-preview><img src=assets/images/1-medium.jpg wip-image-zoom=vm.zoomOptions1 selected-model=vm.selected selected-index=vm.selectedIndex></div><section><div class=demo-settings><button ng-repeat=\\\"image in vm.zoomOptions1.images\\\" ng-click=\\\"vm.selected = image\\\">Image {{$index +1 }}</button><div class=setting><label>Style:</label><select ng-model=vm.zoomOptions1.style><option value=box>Box</option><option value=inner>Inner</option></select></div><div class=setting><label>Box Style Position:</label><select ng-model=vm.zoomOptions1.boxPos><option value=right-top>Right Top</option><option value=right-middle>Right Middle</option><option value=right-bottom>Right Bottom</option><option value=left-top>Left Top</option><option value=left-middle>Left Middle</option><option value=left-bottom>Left Bottom</option><option value=bottom-left>Bottom Left</option><option value=bottom-center>Bottom Center</option><option value=bottom-right>Bottom Right</option><option value=top-left>Top Left</option><option value=top-center>Top Center</option><option value=top-right>Top Right</option></select></div><div class=setting><label>Box Width:</label><input ng-model=vm.zoomOptions1.boxW type=number step=1 min=0></div><div class=setting><label>Box Height:</label><input ng-model=vm.zoomOptions1.boxH type=number step=1 min=0></div><div class=setting><label>Method:</label><select ng-model=vm.zoomOptions1.method><option value=lens>Lens</option><option value=pointer>Pointer</option></select></div><div class=setting><label>Cursor:</label><select ng-model=vm.zoomOptions1.cursor><option value=default>Default</option><option value=pointer>Pointer</option><option value=crosshair>Crosshair</option><option value=move>Move</option><option value=zoom-in>Zoom in</option><option value=none>None</option></select></div><div class=setting><label>Show Lens:</label><input ng-model=vm.zoomOptions1.lens type=checkbox></div><div class=setting><label>Zoom Level:</label><input ng-model=vm.zoomOptions1.zoomLevel type=number step=.5 min=0></div><div class=setting><label>Immersive Mode:</label><input ng-model=vm.zoomOptions1.immersiveMode><div class=detail>false or 0 for disable, max width(px) for trigger</div></div><div class=setting><label>Thumbs Position:</label><select ng-model=vm.zoomOptions1.thumbsPos><option value=top>top</option><option value=bottom>bottom</option></select></div><div class=setting><label>Previous Thumb Button:</label><input ng-model=vm.zoomOptions1.prevThumbButton type=text></div><div class=setting><label>Next Thumb Button:</label><input ng-model=vm.zoomOptions1.nextThumbButton type=text></div><div class=setting><label>Thumb Column Count:</label><input ng-model=vm.zoomOptions1.thumbCol type=number step=1 min=1></div><div class=setting><label>Thumb Column Padding (px):</label><input ng-model=vm.zoomOptions1.thumbColPadding type=number step=1 min=0></div></div><div class=demo-json><h4>Options</h4><pre>{{vm.zoomOptions1 | json}}</pre><h4>Selected Model</h4><pre>{{vm.selected | json}}</pre><h4>SelectedIndex</h4><pre>{{vm.selectedIndex}}</pre></div></section></div>\");}]);"],"sourceRoot":"/source/"}