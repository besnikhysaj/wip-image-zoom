{"version":3,"sources":["scripts/app.js"],"names":["wipImageZoomDirective","$timeout","restrict","template","replace","scope","selectedImage","wipImageZoom","controllerAs","link","element","attrs","ctrl","el","init","controller","$scope","$document","$window","vm","options","angular","extend","defaultOpts","images","mainImage","defaultImage","update","initThumbs","initZoom","updateThumbsPos","initSizes","zoomTracker","style","cursor","lens","zoomLens","display","removeEventListeners","immersiveModeActive","immersiveMode","innerWidth","addEventListener","enableImmersiveMode","immersiveModeEnabled","addEventListeners","zoomStateEnable","zoomStateDisable","setZoomImagePosition","removeEventListener","disableImmersiveMode","find","removeClass","ev","preventDefault","stopPropagation","$apply","addClass","callback","scrollThumbs","thumbsWrapperWidth","thumbsWrapper","clientWidth","thumbWidth","thumbColPadding","thumbCol","thumbsWidth","length","$evalAsync","thumbsPosX","thumbsPos","thumbsEl","paddingBottom","paddingTop","i","children","thumb","width","paddingRight","nextThumb","prevThumb","posX","posY","transform","e","tracker","getBoundingClientRect","trackerW","trackerH","height","trackerL","left","window","scrollX","trackerT","top","scrollY","maskW","maskH","zoomMaskEl","boxW","boxH","zoomLevel","zoomImageEl","zoomImgW","offsetWidth","zoomImgH","offsetHeight","setLensSize","te","type","touches","evPosX","pageX","evPosY","pageY","setLensPosition","method","trackLens","trackPointer","lensW","zoomLevelRatio","lensPosX","lensH","lensPosY","selectedIndex","getSelectedIndex","selectedEl","isInView","offsetLeft","medium","zoomActive","updateMainImage","image","this","boxPos","prevThumbButton","nextThumbButton","prevThumbActive","nextThumbActive","$watch","newVal","oldVal","undefined","on","wipImageZoomLensDirective","require","wipImageZoomTrackerDirective","wipImageZoomMaskDirective","wipImageZoomImageDirective","wipImageZoomThumbsDirective","getElementsByClassName","imageOnLoadDirective","imageOnLoad","console","warn","$inject","module","directive","MainController","toastr","showToastr","info","classAnimation","zoomOptions1","large","runBlock","$log","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","templateUrl","otherwise","config","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app.js","sourcesContent":["angular\n    .module('wipImageZoom', ['ngSanitize'])\n    .directive('imageOnLoad', imageOnLoadDirective)\n    .directive('wipImageZoom', wipImageZoomDirective)\n    .directive('wipImageZoomTracker', wipImageZoomTrackerDirective)\n    .directive('wipImageZoomLens', wipImageZoomLensDirective)\n    .directive('wipImageZoomMask', wipImageZoomMaskDirective)\n    .directive('wipImageZoomImage', wipImageZoomImageDirective)\n    .directive('wipImageZoomThumbs', wipImageZoomThumbsDirective);\n\nfunction wipImageZoomDirective($timeout) {\n    return {\n        restrict    : 'EA',\n        template    : '<div class=\"wip-image-zoom {{vm.options.style}}-style {{vm.options.thumbsPos}}-thumbs\"\\n     ng-class=\"{\\n     \\'active\\':vm.zoomActive, \\n     \\'immersive-mode\\':vm.immersiveModeActive,\\n     \\'immersive-mode-enabled\\':vm.immersiveModeEnabled,\\n     \\'immersive-mode-disabled\\':!vm.immersiveModeEnabled,\\n     \\'box-style\\':vm.options.style == \\'box\\' ,\\n     \\'inner-style\\':vm.options.style == \\'inner\\' || vm.immersiveModeEnabled}\">\\n\\n    <div ng-if=\"vm.immersiveModeEnabled\" class=\"disable-immersive-mode-button\" ng-click=\"vm.disableImmersiveMode()\">\\n        &#10006;</div>\\n\\n    <div class=\"wip-image-zoom-content\">\\n\\n        <wip-image-zoom-thumbs ng-if=\"vm.options.thumbsPos === \\'top\\' && vm.images.length > 1\"></wip-image-zoom-thumbs>\\n\\n        <div class=\"main-image-wrapper\">\\n            <div class=\"image-zoom-tracker\" wip-image-zoom-tracker></div>\\n            <div class=\"image-zoom-lens\" wip-image-zoom-lens></div>\\n            <img class=\"main-image\" ng-src=\"{{vm.mainImage.medium}}\">\\n            <div class=\"zoom-mask\"\\n                 ng-class=\"vm.options.style == \\'box\\' && !vm.immersiveModeEnabled? vm.options.boxPos:\\'\\'\"\\n                 wip-image-zoom-mask>\\n                <img wip-image-zoom-image class=\"zoom-image main-image-large\"\\n                     ng-src=\"{{vm.mainImage.large}}\" image-on-load=\"vm.initZoom()\">\\n            </div>\\n        </div>\\n\\n        <wip-image-zoom-thumbs\\n                ng-if=\"vm.options.thumbsPos === \\'bottom\\' && vm.images.length > 1\"></wip-image-zoom-thumbs>\\n    </div>\\n</div>',\n        replace     : true,\n        scope       : {\n            selectedImage: '=',\n            wipImageZoom : '='\n        },\n        controllerAs: 'vm',\n        link        : function (scope, element, attrs, ctrl) {\n            ctrl.el = element;\n            ctrl.init();\n        },\n        controller  : function ($scope, $document, $window) {\n            var vm = this,\n                evPosX, evPosY, trackerW, trackerH, trackerL, trackerT, maskW, maskH, zoomImgW, zoomImgH, lensW, lensH, lensPosX, lensPosY, zoomLevelRatio,\n                defaultOpts = {\n                    defaultImage   : 0, // Order of the default selected Image\n                    images         : [],\n                    style          : 'inner', // inner or box\n                    boxPos         : 'right-top', // e.g., right-top, right-middle, right-bottom, top-center, top-left, top-right ...\n                    boxW           : 400,\n                    boxH           : 400,\n                    method         : 'lens', // fallow 'lens' or 'pointer'\n                    cursor         : 'crosshair', // 'none', 'default', 'crosshair', 'pointer', 'move'\n                    lens           : true,\n                    zoomLevel      : 3, // 0: not scales, uses the original large image size, use 1 and above to adjust.\n                    immersiveMode  : 769, // false or 0 for disable, max width(px) for trigger\n                    prevThumbButton: '&#9665;',\n                    nextThumbButton: '&#9655;',\n                    thumbsPos      : 'bottom',\n                    thumbCol       : 3,\n                    thumbColPadding: 4\n                };\n\n            vm.el;\n            vm.zoomTracker;\n            vm.zoomLens;\n            vm.zoomImageEl;\n            vm.thumbsWrapper;\n            vm.thumbsEl;\n            vm.mainImage;\n            vm.options;\n            vm.images = [];\n            vm.zoomActive = false;\n\n            vm.prevThumbActive = false;\n            vm.nextThumbActive = false;\n            vm.thumbWidth;\n            vm.thumbsWrapperWidth;\n            vm.thumbsWidth;\n            vm.thumbsPosX;\n            vm.immersiveModeActive;\n            vm.immersiveModeEnabled;\n\n            vm.init = init;\n            vm.initZoom = initZoom;\n            vm.initThumbs = initThumbs;\n\n            vm.updateMainImage = updateMainImage;\n            vm.nextThumb = nextThumb;\n            vm.prevThumb = prevThumb;\n            vm.disableImmersiveMode = disableImmersiveMode;\n\n            function init() {\n                vm.options = !$scope.wipImageZoom ? defaultOpts : angular.extend(defaultOpts, $scope.wipImageZoom);\n                vm.images = vm.options.images;\n\n                vm.mainImage = vm.images[vm.options.defaultImage];\n\n                $scope.selectedImage = vm.mainImage;\n            }\n\n            function update() {\n                $timeout(function () {\n                    initThumbs(function () {\n                        initZoom();\n                        updateThumbsPos();\n                    });\n                }, 0);\n            }\n\n            function initZoom() {\n                initSizes();\n\n                vm.zoomTracker.style.cursor = vm.options.cursor;\n\n                if (vm.options.lens) {\n                    vm.zoomLens.style.display = 'block';\n                } else {\n                    vm.zoomLens.style.display = 'none';\n                }\n\n                // Reset Event Listeners\n                removeEventListeners();\n\n                vm.immersiveModeActive = vm.options.immersiveMode && vm.options.immersiveMode > $window.innerWidth;\n\n                if (vm.immersiveModeActive) {\n                    vm.zoomTracker.addEventListener('mousedown', enableImmersiveMode);\n                }\n\n                if (!vm.immersiveModeActive || vm.immersiveModeEnabled) {\n                    addEventListeners();\n                }\n\n            }\n\n            function addEventListeners() {\n                vm.zoomTracker.addEventListener('mousemove', zoomStateEnable);\n                vm.zoomTracker.addEventListener('touchstart', zoomStateEnable);\n\n                vm.zoomTracker.addEventListener('mouseleave', zoomStateDisable);\n                vm.zoomTracker.addEventListener('touchend', zoomStateDisable);\n\n                vm.zoomTracker.addEventListener('mousemove', setZoomImagePosition);\n                vm.zoomTracker.addEventListener('touchmove', setZoomImagePosition);\n            }\n\n            function removeEventListeners() {\n                vm.zoomTracker.removeEventListener('mousedown', enableImmersiveMode);\n\n                vm.zoomTracker.removeEventListener('mousemove', zoomStateEnable);\n                vm.zoomTracker.removeEventListener('touchstart', zoomStateEnable);\n\n                vm.zoomTracker.removeEventListener('mouseleave', zoomStateDisable);\n                vm.zoomTracker.removeEventListener('touchend', zoomStateDisable);\n\n                vm.zoomTracker.removeEventListener('mousemove', setZoomImagePosition);\n                vm.zoomTracker.removeEventListener('touchmove', setZoomImagePosition);\n            }\n\n            function disableImmersiveMode() {\n                vm.immersiveModeEnabled = false;\n                $document.find('html').removeClass('wip-image-zoom-immersive-mode-enabled');\n                removeEventListeners();\n                update();\n            }\n\n            function enableImmersiveMode(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (!vm.immersiveModeEnabled) {\n                    $scope.$apply(function () {\n                        vm.immersiveModeEnabled = true;\n                        $document.find('html').addClass('wip-image-zoom-immersive-mode-enabled');\n                        update();\n                    });\n                }\n            }\n\n            function initThumbs(callback) {\n                scrollThumbs(0);\n                vm.thumbsWrapperWidth = vm.thumbsWrapper.clientWidth;\n                vm.thumbWidth = (vm.thumbsWrapperWidth + vm.options.thumbColPadding) / vm.options.thumbCol;\n                vm.thumbsWidth = vm.thumbWidth * vm.images.length;\n                // Set Thumbnail width\n                $scope.$evalAsync(function () {\n                    vm.thumbsPosX = 0;\n\n                    if (vm.options.thumbsPos == 'top') {\n                        vm.thumbsEl.style.paddingBottom = vm.options.thumbColPadding + 'px';\n                        vm.thumbsEl.style.paddingTop = 0;\n                    } else {\n                        vm.thumbsEl.style.paddingTop = vm.options.thumbColPadding + 'px';\n                        vm.thumbsEl.style.paddingBottom = 0;\n                    }\n\n                    for (var i = 0; i < vm.thumbsEl.children.length; i++) {\n                        var thumb = vm.thumbsEl.children[i];\n                        thumb.style.width = vm.thumbWidth + 'px';\n                        thumb.style.paddingRight = vm.options.thumbColPadding + 'px';\n                    }\n                    if (callback) {\n                        return callback();\n                    }\n                });\n            }\n\n            function nextThumb() {\n                vm.thumbsPosX = vm.thumbsPosX + vm.thumbWidth;\n                scrollThumbs(vm.thumbsPosX * -1);\n            }\n\n            function prevThumb() {\n                vm.thumbsPosX = vm.thumbsPosX - vm.thumbWidth;\n                scrollThumbs(vm.thumbsPosX * -1);\n            }\n\n            function scrollThumbs(posX, posY) {\n                posX = posX || 0;\n                posY = posY || 0;\n                vm.thumbsEl.style.transform = 'translate3d(' + posX + 'px,' + posY + 'px, 0)';\n            }\n\n            function initSizes(e) {\n                var tracker = vm.zoomTracker.getBoundingClientRect();\n                trackerW = tracker.width;\n                trackerH = tracker.height;\n                trackerL = tracker.left + window.scrollX;\n                trackerT = tracker.top + window.scrollY;\n\n                // Box Style\n                if (vm.options.style == 'box' && !vm.immersiveModeEnabled) {\n                    maskW = vm.options.boxW;\n                    maskH = vm.options.boxH;\n                    vm.zoomMaskEl.style.width = maskW + 'px';\n                    vm.zoomMaskEl.style.height = maskH + 'px';\n                }\n                // Inner Style\n                else {\n                    maskW = trackerW;\n                    maskH = trackerH;\n                    vm.zoomMaskEl.style.width = '100%';\n                    vm.zoomMaskEl.style.height = '100%';\n                }\n\n                if (vm.options.zoomLevel > 1) {\n                    vm.zoomImageEl.style.width = trackerW * vm.options.zoomLevel + 'px';\n                    vm.zoomImageEl.style.height = trackerH * vm.options.zoomLevel + 'px';\n                }\n\n                zoomImgW = vm.zoomImageEl.offsetWidth;\n                zoomImgH = vm.zoomImageEl.offsetHeight;\n\n                setLensSize();\n\n            }\n\n            function setZoomImagePosition(e) {\n                e.preventDefault();\n                var te = e.type == 'touchmove' && e.touches && e.touches[0];\n\n                evPosX = te && te.pageX || e.pageX;\n                evPosY = te && te.pageY || e.pageY;\n\n                setLensPosition();\n\n                if (vm.options.method === 'lens') {\n                    trackLens();\n                }\n                // pointer\n                else {\n                    trackPointer();\n                }\n\n            }\n\n            function trackLens() {\n                var posX = [(zoomImgW - maskW + lensW * 1 / zoomLevelRatio) * [(lensPosX / trackerW)]];\n                var posY = [(zoomImgH - maskH + lensH * 1 / zoomLevelRatio) * [lensPosY / trackerH]];\n                vm.zoomImageEl.style.transform = 'translate3d(' + posX * -1 + 'px,' + posY * -1 + 'px,0)';\n            }\n\n            function trackPointer() {\n                var posX = [(zoomImgW - maskW) * [(evPosX - trackerL) / trackerW]];\n                var posY = [(zoomImgH - maskH) * [(evPosY - trackerT) / trackerH]];\n\n                // Touch Fixes\n                posX = evPosX < trackerL ? 0 : posX;\n                posY = evPosY < trackerT ? 0 : posY;\n                posX = evPosX > trackerL + trackerW ? (zoomImgW - maskW) : posX;\n                posY = evPosY > trackerT + trackerH ? (zoomImgH - maskH) : posY;\n\n                vm.zoomImageEl.style.transform = 'translate3d(' + posX * -1 + 'px,' + posY * -1 + 'px,0)';\n            }\n\n            function setLensSize() {\n                zoomLevelRatio = trackerW / zoomImgW;\n                lensW = maskW * zoomLevelRatio;\n                lensH = maskH * zoomLevelRatio;\n                vm.zoomLens.style.width = lensW + 'px';\n                vm.zoomLens.style.height = lensH + 'px';\n            }\n\n            function setLensPosition() {\n                lensPosX = (evPosX - trackerL) - lensW * 0.5;\n                lensPosY = (evPosY - trackerT) - lensH * 0.5;\n\n                lensPosX = lensPosX > (trackerW - lensW) ? trackerW - lensW : lensPosX;\n                lensPosX = lensPosX < 0 ? 0 : lensPosX;\n\n                lensPosY = lensPosY > (trackerH - lensH) ? trackerH - lensH : lensPosY;\n                lensPosY = lensPosY < 0 ? 0 : lensPosY;\n\n                vm.zoomLens.style.transform = 'translate3d(' + lensPosX + 'px,' + lensPosY + 'px,0)';\n\n            }\n\n            function updateThumbsPos() {\n                var selectedIndex = getSelectedIndex();\n                var selectedEl = vm.thumbsEl.children[selectedIndex];\n                var isInView = vm.thumbsPosX <= selectedEl.offsetLeft && selectedEl.offsetLeft < vm.thumbsPosX + vm.thumbsWrapperWidth;\n\n                if (isInView) {\n                    return;\n                }\n\n                vm.thumbsPosX = selectedEl.offsetLeft;\n\n                if ((vm.thumbsWidth - vm.thumbsPosX) <= vm.thumbsWrapperWidth) {\n                    vm.thumbsPosX = vm.thumbWidth * (vm.options.images.length - vm.options.thumbCol);\n                }\n\n                scrollThumbs(vm.thumbsPosX * -1);\n\n            }\n\n            function getSelectedIndex() {\n                for (var i = 0; i < vm.images.length; i++) {\n                    if (vm.images[i].medium === vm.mainImage.medium) {\n                        return i;\n                    }\n                }\n            }\n\n            function toogleZoomState(state) {\n                $scope.$evalAsync(function () {\n                    vm.zoomActive = state || !vm.zoomActive;\n                })\n            }\n\n            function zoomStateEnable() {\n                $scope.$evalAsync(function () {\n                    vm.zoomActive = true;\n                })\n            }\n\n            function zoomStateDisable() {\n                $scope.$evalAsync(function () {\n                    vm.zoomActive = false;\n                })\n            }\n\n            function updateMainImage(image) {\n                vm.mainImage = image;\n                $scope.selectedImage = vm.mainImage;\n            }\n\n            $scope.$watch('selectedImage', function (newVal, oldVal) {\n                if (newVal !== undefined && newVal !== oldVal) {\n                    vm.mainImage = newVal;\n                    updateThumbsPos();\n                }\n            }, true);\n\n            angular.element(window).on('resize', function (e) {\n                update();\n            });\n\n            $scope.$watch(function () {\n                return {\n                    left: vm.zoomTracker.getBoundingClientRect().left,\n                    top : vm.zoomTracker.getBoundingClientRect().top\n                };\n            }, function (newVal, oldVal) {\n                if (newVal !== undefined && newVal !== oldVal) {\n                    update();\n                }\n            }, true);\n\n            $scope.$watch('wipImageZoom', function (newVal, oldVal) {\n                if (newVal !== undefined && newVal !== oldVal) {\n                    init();\n                    update();\n                }\n            }, true);\n        }\n    }\n};\n\nfunction wipImageZoomLensDirective() {\n    return {\n        restrict: 'EA',\n        require : '^wipImageZoom',\n        link    : function (scope, element, attrs, ctrl) {\n            ctrl.zoomLens = element[0];\n        }\n    }\n}\n\nfunction wipImageZoomTrackerDirective() {\n    return {\n        restrict: 'EA',\n        require : '^wipImageZoom',\n        link    : function (scope, element, attrs, ctrl) {\n            ctrl.zoomTracker = element[0];\n        }\n    }\n}\n\nfunction wipImageZoomMaskDirective() {\n    return {\n        restrict: 'EA',\n        require : '^wipImageZoom',\n        link    : function (scope, element, attrs, ctrl) {\n            ctrl.zoomMaskEl = element[0];\n        }\n    }\n}\n\nfunction wipImageZoomImageDirective() {\n    return {\n        restrict: 'EA',\n        require : '^wipImageZoom',\n        link    : function (scope, element, attrs, ctrl) {\n            ctrl.zoomImageEl = element[0];\n        }\n    }\n}\n\nfunction wipImageZoomThumbsDirective() {\n    return {\n        restrict: 'EA',\n        require : '^wipImageZoom',\n        template: '<div class=\"thumbs-wrapper\">\\n    <div class=\"thumbs\">\\n        <div class=\"thumb-wrapper\" ng-repeat=\"image in vm.images\">\\n            <img ng-src=\"{{image.thumb}}\" ng-click=\"vm.updateMainImage(image)\"\\n                 ng-class=\"{\\'selected\\': vm.mainImage.thumb === image.thumb}\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\"prev-button\" ng-if=\"vm.thumbsPosX !== 0\"\\n     ng-click=\"vm.prevThumb()\"\\n     ng-bind-html=\"vm.options.prevThumbButton\">Prev\\n</div>\\n<div class=\"next-button\"\\n     ng-if=\"vm.thumbsPosX < vm.thumbWidth * (vm.options.images.length - vm.options.thumbCol)\"\\n     ng-click=\"vm.nextThumb()\"\\n     ng-bind-html=\"vm.options.nextThumbButton\">Next\\n</div>',\n        link    : function (scope, element, attrs, ctrl) {\n            ctrl.thumbsWrapper = element[0].getElementsByClassName('thumbs-wrapper')[0];\n            ctrl.thumbsEl = element[0].getElementsByClassName('thumbs')[0];\n            ctrl.initThumbs();\n        }\n    }\n}\n\nfunction imageOnLoadDirective() {\n    return {\n        restrict: 'A',\n        link    : function (scope, element, attrs) {\n            element[0].addEventListener('load', function () {\n                scope.$apply(attrs.imageOnLoad);\n            }, false);\n            element[0].addEventListener('error', function () {\n                console.warn('image could not be loaded');\n            });\n        }\n    };\n}\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('wipImageZoom')\r\n        .controller('MainController', MainController);\r\n\r\n    /** @ngInject */\r\n    function MainController($timeout, toastr) {\r\n        var vm = this;\r\n        vm.showToastr = showToastr;\r\n        vm.zoomOptions1 = {\r\n            defaultImage   : 0, // Order of the default selected Image\r\n            style          : 'box', // inner or box\r\n            boxPos         : 'right-middle',\r\n            boxW           : 400,\r\n            boxH           : 400,\r\n            method         : 'lens', // fallow 'lens' or 'pointer'\r\n            cursor         : 'crosshair', // 'none', 'default', 'crosshair', 'pointer', 'move'\r\n            lens           : true,\r\n            zoomLevel      : 3, // 0: not scales, uses the original large image size, use 1 and above to adjust.\r\n            immersiveMode  : 769,\r\n            prevThumbButton: '&#9665;',\r\n            nextThumbButton: '&#9655;',\r\n            thumbsPos      : 'top',\r\n            thumbCol       : 4,\r\n            thumbColPadding: 4,\r\n            images         : [\r\n                {\r\n                    thumb : 'assets/images/1-thumb.jpg',\r\n                    medium: 'assets/images/1-medium.jpg',\r\n                    large : 'assets/images/1-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/2-thumb.jpg',\r\n                    medium: 'assets/images/2-medium.jpg',\r\n                    large : 'assets/images/2-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/3-thumb.jpg',\r\n                    medium: 'assets/images/3-medium.jpg',\r\n                    large : 'assets/images/3-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/4-thumb.jpg',\r\n                    medium: 'assets/images/4-medium.jpg',\r\n                    large : 'assets/images/4-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/5-thumb.jpg',\r\n                    medium: 'assets/images/5-medium.jpg',\r\n                    large : 'assets/images/5-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/6-thumb.jpg',\r\n                    medium: 'assets/images/6-medium.jpg',\r\n                    large : 'assets/images/6-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/7-thumb.jpg',\r\n                    medium: 'assets/images/7-medium.jpg',\r\n                    large : 'assets/images/7-large.jpg'\r\n                }\r\n            ]\r\n        };\r\n\r\n        function showToastr() {\r\n            toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\r\n            vm.classAnimation = '';\r\n        }\r\n\r\n    }\r\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo', ['ui.router', 'toastr','wipImageZoom']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"wipImageZoom\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><h1 class=page-title>wip-image-zoom</h1><div class=demo-preview><img src=assets/images/1-medium.jpg wip-image-zoom=vm.zoomOptions1 selected-image=vm.selected></div><section><div class=demo-settings><button ng-repeat=\\\"image in vm.zoomOptions1.images\\\" ng-click=\\\"vm.selected = image\\\">Image {{$index +1 }}</button><div class=setting><label>Style:</label><select ng-model=vm.zoomOptions1.style><option value=box>Box</option><option value=inner>Inner</option></select></div><div class=setting><label>Box Style Position:</label><select ng-model=vm.zoomOptions1.boxPos><option value=right-top>Right Top</option><option value=right-middle>Right Middle</option><option value=right-bottom>Right Bottom</option><option value=left-top>Left Top</option><option value=left-middle>Left Middle</option><option value=left-bottom>Left Bottom</option><option value=bottom-left>Bottom Left</option><option value=bottom-center>Bottom Center</option><option value=bottom-right>Bottom Right</option><option value=top-left>Top Left</option><option value=top-center>Top Center</option><option value=top-right>Top Right</option></select></div><div class=setting><label>Box Width:</label><input ng-model=vm.zoomOptions1.boxW type=number step=1 min=0></div><div class=setting><label>Box Height:</label><input ng-model=vm.zoomOptions1.boxH type=number step=1 min=0></div><div class=setting><label>Method:</label><select ng-model=vm.zoomOptions1.method><option value=lens>Lens</option><option value=pointer>Pointer</option></select></div><div class=setting><label>Cursor:</label><select ng-model=vm.zoomOptions1.cursor><option value=default>Default</option><option value=pointer>Pointer</option><option value=crosshair>Crosshair</option><option value=move>Move</option><option value=zoom-in>Zoom in</option><option value=none>None</option></select></div><div class=setting><label>Show Lens:</label><input ng-model=vm.zoomOptions1.lens type=checkbox></div><div class=setting><label>Zoom Level:</label><input ng-model=vm.zoomOptions1.zoomLevel type=number step=.5 min=0></div><div class=setting><label>Immersive Mode:</label><input ng-model=vm.zoomOptions1.immersiveMode type=number step=1 min=0><div class=detail>false or 0 for disable, max width(px) for trigger</div></div><div class=setting><label>Thumbs Position:</label><select ng-model=vm.zoomOptions1.thumbsPos><option value=top>top</option><option value=bottom>bottom</option></select></div><div class=setting><label>Previous Thumb Button:</label><input ng-model=vm.zoomOptions1.prevThumbButton type=text></div><div class=setting><label>Next Thumb Button:</label><input ng-model=vm.zoomOptions1.nextThumbButton type=text></div><div class=setting><label>Thumb Column Count:</label><input ng-model=vm.zoomOptions1.thumbCol type=number step=1 min=1></div><div class=setting><label>Thumb Column Padding (px):</label><input ng-model=vm.zoomOptions1.thumbColPadding type=number step=1 min=0></div></div><div class=demo-json><h4>Options</h4><pre>{{vm.zoomOptions1 | json}}</pre><h4>Selected</h4><pre>{{vm.selected | json}}</pre></div></section></div>\");}]);"],"sourceRoot":"/source/"}